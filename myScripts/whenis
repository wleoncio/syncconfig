#!/bin/bash
# Error codes:
# 0 - success
# 1 - missing required argument (not used, docopts handles it)
# 2 - missing dependencies
version="0.0.0 licensed under GPLv3"

usage() {
  cat << EOU
Usage:
  $(basename $0) INCREMENT [--from DATE]
  $(basename $0) -h | --help
  $(basename $0) --version

Calculates and displays a date incremented by a given amount of time.

Arguments:
  INCREMENT    Time increment (+1d, -2w, +3m, -1y; use quotes as needed)

Options:
  --from DATE  Starting date in YYYY-MM-DD format (default: today)
  -h --help    Print this help and exit
  --version    Print version and exit

Send bug reports and feature requests to: https://github.com/wleoncio/syncconfig/issues
EOU
}

# Check if docopts is installed
if ! command -v docopts &> /dev/null; then
  echo "Error: docopts is not installed." >&2
  exit 2
fi

# Setting variables
eval "$(docopts -A ARGS -h "$(usage)" -V "$version" : "$@")"
date="${ARGS['--from']}"
if [[ -z $date ]]; then
  dateymd=\"$(date "+%Y-%m-%d")\"
else
  dateymd=\"$date\"
fi
increment=${ARGS['INCREMENT']}

# format $date as yyyy-mm-dd, if necessary
operation=$(qalc $dateymd + $increment)
echo "Operation: $operation"
echo ""

# Trimming out quotation marks
new_date=$(echo $operation | cut --delimiter="=" --fields=2 | tr -d '"')
dateymd=$(echo $dateymd | tr -d '"')

# Retrieve month and year from new date
year_date=$(echo $dateymd | cut --delimiter="-" --fields=1)
month_date=$(echo $dateymd | cut --delimiter="-" --fields=2)
year_date_new=$(echo $new_date | cut --delimiter="-" --fields=1)
month_date_new=$(echo $new_date | cut --delimiter="-" --fields=2)

# Display date on calendar
ncal -wH $dateymd $month_date $year_date
echo ""
ncal -wH $new_date $month_date_new $year_date_new
