[
    {
        "key": "ctrl+2",
        "command": "-r.length",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+1",
        "command": "-r.nrow",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+5",
        "command": "-r.names",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+4",
        "command": "-r.thead",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+3",
        "command": "-r.head",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+g ctrl+p",
        "command": "git.push"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "description": "Build package",
        "key": "ctrl+r ctrl+b",
        "command": "r.build"
    },
    {
        "key": "ctrl+r ctrl+d",
        "command": "r.runCommand",
        "args": "devtools::document()"
    },
    {
        "description": "Lint package",
        "key": "ctrl+r ctrl+l",
        "command": "r.runCommand",
        "args": "library(lintr); lint_package(linters = list(commented_code_linter(), infix_spaces_linter(), line_length_linter(), quotes_linter(), spaces_inside_linter(), spaces_left_parentheses_linter(), unnecessary_concatenation_linter()))"
    },
    {
        "description": "Load exported package functions",
        "key": "ctrl+r ctrl+r",
        "command": "r.runCommand",
        "args": "devtools::load_all(export_all = FALSE)"
    },
    {
        "description": "Load all package functions",
        "key": "ctrl+r ctrl+shift+r",
        "command": "r.runCommand",
        "args": "devtools::load_all(export_all = TRUE)"
    },
    {
        "description": "Document and install package",
        "key": "ctrl+r ctrl+i",
        "command": "r.runCommand",
        "args": "devtools::document(); devtools::install()"
    },
    {
        "description": "Update version and install package",
        "key": "ctrl+r ctrl+shift+i",
        "command": "r.runCommand",
        "args": "usethis::use_version('dev'); devtools::install()"
    },
    {
        "description": "Update docs, version and install package",
        "key": "ctrl+shift+r ctrl+shift+i",
        "command": "r.runCommand",
        "args": "devtools::document(); usethis::use_version('dev'); devtools::install()"
    },
    {
        "description": "Update version and install package",
        "key": "ctrl+r ctrl+shift+i",
        "command": "r.runCommand",
        "args": "usethis::use_version('dev'); devtools::install()"
    },
    {
        "description": "Bump development version",
        "key": "ctrl+r ctrl+v",
        "command": "r.runCommand",
        "args": "usethis::use_version('dev')"
    },
    {
        "description": "Bump feature version",
        "key": "ctrl+r ctrl+shift+v",
        "command": "r.runCommand",
        "args": "require('OCBEdev'); add_feature_version()"
    },
    {
        "description": "List object structure",
        "key": "ctrl+r ctrl+s",
        "command": "r.runCommand",
        "args": "print(ls.str(), all.names = TRUE, max.level = 0)"
    },
    {
        "description": "List object structure",
        "key": "ctrl+r ctrl+shift+s",
        "command": "r.runCommand",
        "args": "View(globalenv())"
    },
    {
        "description": "View environment",
        "key": "ctrl+r ctrl+e",
        "command": "r.runCommand",
        "args": "devtools::run_examples()"
    },
    {
        "description": "Clean working environment",
        "key": "ctrl+r shift+r",
        "command": "r.runCommand",
        "args": "rm(list = ls())"
    },
    {
        "key": "ctrl+r ctrl+n",
        "command": "r.runCommand",
        "args": "; notifier::notify('done')"
    },
    {
        "key": "ctrl+r ctrl+u",
        "command": "r.runCommand",
        "args": "devtools::test()"
    },
    {
        "key": "ctrl+r ctrl+shift+u",
        "command": "r.runCommand",
        "args": "covr::report(covr::package_coverage())"
    },
    {
        "key": "ctrl+r ctrl+p",
        "command": "r.runCommand",
        "args": "Rprof()"
    },
    {
        "key": "ctrl+r ctrl+shift+p",
        "command": "r.runCommand",
        "args": "Rprof(NULL); summaryRprof(); file.remove('Rprof.out')"
    },
    {
        "key": "ctrl+s ctrl+s",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+t ctrl+c",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+g ctrl+c",
        "command": "git.commit"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "workbench.action.closeFolder"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+e ctrl+left",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+e ctrl+right",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "ctrl+alt+s",
        "command": "workbench.action.files.saveAll"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+g ctrl+s",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "extension.kanban.openBoard"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+m ctrl+r",
        "command": "-latex-workshop.shortcut.mathrm",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'latex'"
    },
    {
        "key": "ctrl+m ctrl+r",
        "command": "html.preview.refresh"
    },
    {
        "key": "ctrl+shift+alt+s",
        "command": "workbench.action.openSettings"
    },
    {
        "key": "ctrl+,",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "ctrl+shift+left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+alt+a",
        "command": "wwm.aligncode"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "meta+m",
        "command": "workbench.action.toggleMenuBar"
    },
    {
        "key": "ctrl+t ctrl+b",
        "command": "workbench.action.positionPanelBottom",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t ctrl+r",
        "command": "workbench.action.positionPanelRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t ctrl+m",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t ctrl+p",
        "command": "workbench.action.nextPanelView",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+s ctrl+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+t ctrl+s",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+s ctrl+g",
        "command": "workbench.view.scm"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm"
    },
    {
        "key": "ctrl+t left",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t right",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t down",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t up",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+e down",
        "command": "workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+e left",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+e right",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+e left",
        "command": "workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+e ctrl+up",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "ctrl+e ctrl+down",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+t ctrl+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+r ctrl+q",
        "command": "r.helpPanel.showQuickPick"
    },
    {
        "key": "ctrl+r ctrl+t",
        "command": "r.createRTerm"
    },
    {
        "key": "ctrl+s ctrl+r",
        "command": "workbench.view.extension.workspaceViewer"
    },
    {
        "description": "Check package",
        "key": "ctrl+r ctrl+c",
        "command": "r.runCommand",
        "args": "devtools::check()"
    },
    {
        "description": "Check package, skip vignettes and donttest",
        "key": "ctrl+r ctrl+shift+c",
        "command": "r.runCommand",
        "args": "devtools::check(vignettes = FALSE, args = c('--no-examples', '--no-tests'), cran = FALSE, run_dont_test = FALSE)"
    },
    {
        "key": "ctrl+s ctrl+i",
        "command": "issues:github.focus"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "-markdown.extension.onIndentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[",
        "command": "-markdown.extension.onOutdentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+[",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+]",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-markdown.extension.editing.toggleHeadingDown",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k shift+left",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k shift+right",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "editor.action.formatDocument"
    },
    {
        "key": "ctrl+s ctrl+o",
        "command": "outline.focus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "revealFileInOS"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+s ctrl+h",
        "command": "timeline.focus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+g ctrl+shift+f",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+r ctrl+k",
        "command": "r.knitRmd",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-r.knitRmd",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+s ctrl+t",
        "command": "workbench.view.extension.todo-tree-container"
    },
    {
        "key": "ctrl+alt+k",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+delete",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "r.runSelection",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+enter",
        "command": "r.runSelection",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+enter",
        "command": "r.runSelection",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "r.runSelectionRetainCursor",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "r.runSelectionRetainCursor",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "r.runSelectionRetainCursor",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k right",
        "command": "-views.moveViewRight",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k right",
        "command": "editor.unfold"
    },
    {
        "key": "ctrl+k left",
        "command": "editor.fold"
    },
    {
        "key": "ctrl+k left",
        "command": "-views.moveViewLeft",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+g ctrl+b",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+s ctrl+w",
        "command": "workspaceViewer.focus"
    },
    {
        "key": "ctrl+enter",
        "command": "python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+s",
        "command": "python.execInTerminal-icon",
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    {
        "key": "ctrl+k ctrl+g",
        "command": "workbench.action.closeEditorsAndGroup"
    },
    {
        "key": "ctrl+k ctrl+shift+g",
        "command": "workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+k alt+g",
        "command": "workbench.action.closeEditorsInOtherGroups"
    },
    {
        "key": "ctrl+g ctrl+g",
        "command": "git-history.history.toggleVisibility"
    },
    {
        "key": "ctrl+g ctrl+shift+g",
        "command": "git-history.history.refresh"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow",
        "when": "emptyWorkspaceSupport"
    },
    {
        "key": "ctrl+k o",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+t ctrl+k",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+[Backquote]",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+[Backquote]",
        "command": "-workbench.action.terminal.focusTabs",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+[Backquote]",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "ctrl+a ctrl+v",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+t ctrl+l",
        "command": "workbench.action.terminal.openDetectedLink",
        "when": "terminalFocus && terminalHasBeenCreated"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.terminal.openDetectedLink",
        "when": "terminalFocus && terminalHasBeenCreated"
    },
    {
        "key": "ctrl+g ctrl+a",
        "command": "vscode-chatgpt.freeText"
    },
    {
        "key": "ctrl+s ctrl+d",
        "command": "ddb50.debugView.focus"
    },
    {
        "key": "ctrl+g ctrl+g",
        "command": "git-graph.view"
    },
    {
        "key": "shift+alt+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+9",
        "command": "editor.action.inlineSuggest.showNext"
    },
    {
        "key": "alt+8",
        "command": "editor.action.inlineSuggest.showPrevious"
    },
    {
        "key": "ctrl+s ctrl+a",
        "command": "workbench.view.extension.github-actions"
    },
    {
        "key": "ctrl+t f2",
        "command": "workbench.action.terminal.rename",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t shift+f2",
        "command": "workbench.action.terminal.changeColor",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t ctrl+shift+f2",
        "command": "workbench.action.terminal.changeIcon",
        "when": "terminalFocus"
    },
    {
        "key": "down",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.selectAll",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.selectAll"
    },
    {
        "key": "ctrl+r ctrl+w",
        "command": "workbench.action.reloadWindow",
        "when": "true"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+s ctrl+p",
        "command": "workbench.panel.chat.view.copilot.focus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+shift+right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-quarto.preview",
        "when": "!quartoRenderScriptActive"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "-issue.createIssueFromFile",
        "when": "!issues.creatingFromFile && resourceScheme == 'newIssue' && config.files.autoSave != 'off'"
    },
    {
        "key": "ctrl+p ctrl+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "ctrl+p ctrl+shift+o",
        "command": "workbench.action.files.openFileFolder"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+i",
        "command": "-workbench.action.terminal.chat.start",
        "when": "inlineChatHasProvider && terminalFocusInAny && terminalHasBeenCreated || inlineChatHasProvider && terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+i",
        "command": "-workbench.action.chat.startVoiceChat",
        "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
    },
    {
        "key": "ctrl+i",
        "command": "-workbench.action.chat.stopListeningAndSubmit",
        "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
    },
    {
        "key": "ctrl+i",
        "command": "-workbench.action.terminal.chat.focusInput",
        "when": "terminalChatFocus && !inlineChatFocused"
    },
    {
        "key": "ctrl+i",
        "command": "-inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
    },
    {
        "key": "ctrl+i",
        "command": "-markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "ctrl+k i",
        "command": "workbench.action.terminal.chat.start",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+k e",
        "command": "github.copilot.interactiveEditor.explain"
    },
    {
        "key": "ctrl+p ctrl+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+p ctrl+f",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    }
]
